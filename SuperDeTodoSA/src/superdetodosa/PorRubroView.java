/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package superdetodosa;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cyka
 */
public class PorRubroView extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    /**
     * Creates new form PorRubroView
     */
    public PorRubroView() {
        initComponents();
        cargaComboBox();
        armarCabecera();  
        this.setClosable(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLSeleccion = new javax.swing.JLabel();
        jCRubro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTTablaPorRubro = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel1.setText("Listado por Rubro");

        jLSeleccion.setText("Seleccione el Rubro:");

        jCRubro.setModel(new javax.swing.DefaultComboBoxModel<>(new Categoria[] {}));
        jCRubro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCRubroItemStateChanged(evt);
            }
        });

        jTTablaPorRubro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTTablaPorRubro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLSeleccion)
                        .addGap(119, 119, 119)
                        .addComponent(jCRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSeleccion)
                    .addComponent(jCRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCRubroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCRubroItemStateChanged
        // TODO add your handling code here:
        borrarFilas();
        for (Producto prod : MenuPrincipal.listaProductos) {
            if (prod.getRubro().equals(jCRubro.getSelectedItem())) {
                modelo.addRow(new Object[] { prod.getCodigo(),prod.getDescripcion(),prod.getPrecio(),prod.getStock() });
            }
        }
    }//GEN-LAST:event_jCRubroItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Categoria> jCRubro;
    private javax.swing.JLabel jLSeleccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTTablaPorRubro;
    // End of variables declaration//GEN-END:variables
    private void cargaComboBox() {
       jCRubro.addItem(null);
       jCRubro.addItem(Categoria.COMESTIBLE);
       jCRubro.addItem(Categoria.LIMPIEZA);
       jCRubro.addItem(Categoria.PERFUMERIA);
    }
    private void armarCabecera() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jTTablaPorRubro.setModel(modelo);
    }
    private void borrarFilas() {        
        for (int filas = jTTablaPorRubro.getRowCount()-1 ;filas >= 0; filas--) {
            modelo.removeRow(filas);
        }
    }
}
